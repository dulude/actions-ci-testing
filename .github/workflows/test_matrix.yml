name: MatrixTest
on: [push, pull_request]
env:
  ARCH_ON_CI: "normal"

jobs:
  gather-notebooks:
    runs-on: ubuntu-latest
    outputs:
      #matrix: ${{ steps.get-changed-files.outputs.all_changed_files }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - name: changed-files
      id: get-changed-files
      uses: tj-actions/changed-files@v18.4
      with:
        separator: ","
        files: |
          **/*.ipynb
          
    - name: set-matrix
      id: set-matrix
      run: |
        IFS=',' read -r -a array <<< "${{steps.get-changed-files.outputs.all_changed_files}}"
        echo "{$array}"
        echo "::set-output name=matrix::$( printf '$s\n' "${array}[@]" | jq - R . | jq -s .)"
      #run: echo "::set-output name=matrix::$( ${{ steps.files.outputs.all }} )"
      #run: echo "::set-output name=matrix::( "echo ${{ steps.changed-files.outputs.all_changed_files }}" | jq -cnR '[inputs | select(length>0)]')"
         
  notebook-validation:
    needs: gather-notebooks
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.gather-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2   
      - name: Set up Python 3.8.12
        uses: actions/setup-python@v2 ## needed for caching
        with:
          python-version: 3.8.12
          cache: 'pip'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          #conda env update --file CIenvironment.yml --name base
          pip install -r $(dirname "${{ matrix.notebooks }}")/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
      - name: Validate notebooks 
        run: |
         pytest --nbval "${{ matrix.notebooks }}"
         
  notebook-execution:
    needs: notebook-validation
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.gather-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2   
      - name: Set up Python 3.8.12
        uses: actions/setup-python@v2 ## needed for caching
        with:
          python-version: 3.8.12
          cache: 'pip'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          pip install -r $(dirname "${{ matrix.notebooks }}")/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
      - name: Execute notebooks
        run: |
          jupyter nbconvert --template classic --to html --execute "${{ matrix.notebooks }}"
          
  deploy-book:
    needs: notebook-execution
    runs-on: ubuntu-latest
    steps:
    - name: Free up disk space
      run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - uses: actions/checkout@v2
    - name: Set up Python 3.8.12
      uses: actions/setup-python@v2 ## needed for caching
      with:
        python-version: 3.8.12
        cache: 'pip'
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install Python dependencies
      run: |
        sudo apt-get install python3-pip
        pip install -r requirements.txt
        #        pip install git+git://github.com/executablebookproject/cli.git
        pip install ghp-import
        pip install jupyter-book
        pip install myst-nb
        pip install nbval
        ## test to bypass the jupyter-book lower version
        pip install jsonschema==4.6.0
        PATH="${PATH}:${HOME}/.local/bin"
    - name: Build book HTML 
      run: |
        jupyter-book build .
    - name: Execute JDAVIZ placeholder substitution
      run: |
        cp jdaviz_placeholder_new.png _build/html                                                                                                                 
        ./placeholder.sh
    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_build/html

